{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-103172865-1', 'auto');
  ga('send', 'pageview');

</script>

<script type="text/javascript">
    // window.smartlook||(function(d) {
    // var o=smartlook=function(){ o.api.push(arguments)},h=d.getElementsByTagName('head')[0];
    // var c=d.createElement('script');o.api=new Array();c.async=true;c.type='text/javascript';
    // c.charset='utf-8';c.src='https://rec.smartlook.com/recorder.js';h.appendChild(c);
    // })(document);
    // smartlook('init', '5814a763f5c42be6436c4f1a369357cb6392d32e');
</script>

<script type="text/javascript">

	var currentprompt;
	var socket;
	var socketEvents;

	var promptId = "{{promptId}}";

	$(document).ready(function() {

		// All possible socket event IDs
	var eventIds = [
	
		'connect',
		'disconnect',
		'plan:new',

		'response',
		'response:update'

	];


		var registerEvents = function() {
			$.each(eventIds, function(index, id) {
	      
	      socket.on(id, function(eventData) {
	            
	            socketEvents(id, eventData);

	            if(typeof(gameEvents) == "function")
	                gameEvents(id, eventData);

	        });

	    });
		};

		/* 
		 Associate provided data object with current game ID
		*/
		var emitData = function(data) {

			if(!data.code && data.new == true){

			}

			if(gameCode === undefined && typeof(data.code) !== 'undefined')
				gameCode = data.code;

			return { gameId: gameCode, msgData: data };
		
		};

		/* 
		 Obtains the embedded data ('data-key="something"') object from the provided submit button
		*/
		var getFormData = function(submitElement) {

			var pkg;

			if(submitElement[0].dataset === undefined)
				return undefined;
			
			try {
				pkg = JSON.parse(submitElement[0].dataset.package);
			}
			catch(e) {
				pkg = submitElement[0].dataset.package;
			}

			if($.isPlainObject(pkg)) {
				$.each(Object.keys(pkg), function( key, value ) {

					if(pkg[value] !== undefined)
					  pkg[value] = $(pkg[value].toString()).val();

				});
			}
			else if(!submitElement.is('button'))
				pkg = $(pkg).val();

			return pkg;

		};

		/**
		 * Listen for forms that dispatch socket events.
		 *
		 * ### Examples:
		 *
		 * @class global
		 */
		$(document).on('click', '.form .submit', function(evt) {
		    
		    var event = $(this).data().event;
		    var pkg = getFormData($(this));

		    // Emit event to socket
		    socket.emit(event, emitData(pkg));

		});

		

		// Menu toggling
	   $("#menu-close").click(function(e) {
		   e.preventDefault();
		   $("#sidebar-wrapper").toggleClass("open");
	   });
	   $("#menu-toggle").click(function(e) {
		   e.preventDefault();
		   $("#sidebar-wrapper").toggleClass("open");
	   });



 //    {{#ifeq section "home"}}

	//     // set interval for 10 seconds
	//     var promptinterval = setInterval(promptChange, 10000);

	// 	function promptChange() {

	// 		var prompts = $('.prompt-wrapper');
	// 		_.each(prompts, function(prompt){
	// 			$(prompt).hide;

	// 		});
	// 	}
	// 	function abortTimer() { // to be called when you want to stop the timer
	// 	    clearInterval(tid);
	// 	}
	
	// {{/ifeq}}



	{{#ifeq section "home"}}

		var plans = $('.dropdown-menu li .option-plan').size();
		$('span.plan-number').text("(" + plans + ")");


		$('.dropdown-menu li').delegate('a','click', function() {
					
			$('.is-checked').removeClass('is-checked');
			$(this).addClass('is-checked');

			$('#prompt-select .button-text').text($(this).text());

		});

		var findPlan = function(plan){

			$('.prompt-group').fadeOut();

			var data = {};

			if (!plan) {
				data.plan = $('#prompt-select a.is-checked').attr('id');
			} else {
				data.plan = plan;
			}

			if (!sessionStorage.getItem('plan'))
				sessionStorage.setItem('plan', data.plan )

			if (!data.plan)
				console.log("uh oh did you select anything?!")
			else {
				console.log("let's get that sucker for you");

				$.get("/api/find/", data, function(data){
					$('.prompt-input').addClass('chosen');
					setTimeout(function(){
						$('#response-input').html(data.eventData).fadeIn(function(){
							loadLive(data.data.promptId);
						});
					}, 1200)
					
				})
				.fail(function() {
				    alert( "error" );
				});
			}
		};
		// findPlan();



		

		

		var loadLive = function(id, player) {

				// Take Text Area Input
			$('#response-send').on('click', function(e) {

				if ($('#prompt-input').val() == '' || $('#name-input').val() == '') {

					if ($('#name-input').val() == '') {
						$('.error').text('Please add a name, any name will do!').fadeIn(function(){
							setTimeout(function(){
								$('.error').fadeOut();
							}, 8000);
						});
					}
					
					return;
				}
				else {
	            
	            	var data = {
	      				plan: id,
	      				response: $('#prompt-input').val(), 
	      				creator: $('#name-input').val(), 
	      				type: 'Text'
	      			};

	            	$.get("/api/responding/", data, function(data){
						if (data.error_code)
							$('.error').text(data.msg).fadeIn(function(){
								setTimeout(function(){
									$('.error').fadeOut();
								});
							});
						else {
							$('#prompt-input').val('');
							$('.popup').fadeIn(function(){
								$('.confirm').on('click', function() {
									window.location = '/archive/' + data.data.id;
								});

								$('.abort').on('click', function() {
									$('.popup').fadeOut();
								});
							});
							// Now update player window
						}
					})
					.fail(function() {
					    // alert( "error" );
					});


	                // socket.emit('response', { 
	                // 	response: $(this)[0].value,
	                // 	room: id, 
	                // 	creator: player, 
	                // 	type: 'Text'
	                // });

	            }

	        });

	        // Icon send
		    $('.icon:not(.item)').on('click', function(){

		      	console.log($(this).attr('id'));
		      	$('.selected').toggleClass('selected');
		      	$(this).toggleClass('selected');

		    });

		    $('#response-send').on('click', function(){

	      		var icon = $('.icon.selected:not(.item)').attr('id');

	      		if (!icon || $('#name-input').val() == '') {
	      			if ($('#name-input').val() == '') {
						$('.error').text('Please add a name, any name will do!').fadeIn(function(){
							setTimeout(function(){
								$('.error').fadeOut();
							});
						});
					}
	      			return;
	      		}
	      		else {

	      			var data = {
	      				plan: id,
	      				response: icon, 
	      				creator: $('#name-input').val(), 
	      				type: 'Image'
	      			};

	      			console.log('emitting');
	      			$.get("/api/responding/", data, function(data){
						if (data.error_code)
							$('.error.response').text(data.msg).fadeIn(function(){
								setTimeout(function(){
									$('.error').fadeOut();
								}, 8000);
							});
						else {
							console.log('did it');
							$('.icon.selected:not(.item)').removeClass('selected');
							$('.popup').fadeIn(function(){
								$('.confirm').on('click', function() {
									window.location = '/archive/' + data.data.id;
								});

								$('.abort').on('click', function() {
									$('.popup').fadeOut();
								});
							});
							// Now update player window
						}
					})
					.fail(function() {
					    // alert( "error" );
					});
	      			// socket.emit('response', {
			      	// 	response: icon, 
			      	// 	room: id, 
		        //         creator: player, 
		        //         type:'Image'
			      	// });
	      		}
	      		
	      	});


			// console.log(id)
			// // Open Socket connection
			// socket = io('//', {
			//  	reconnection: true,
			//  	'reconnectionDelay': 500,
			//  	'maxReconnectionAttempts':Infinity
			// });

		 //    registerEvents();

		 //    socketEvents = function(eventId, eventData) {
			    
			//     switch (eventId) {

			//         case 'connect':

			// 	        console.log('connected');

			// 	        socket.emit('room', id);

			// 	        // Take Text Area Input
			// 			$('#prompt-input').keypress(function(e) {
			// 	            // Enter pressed?
			// 	            if(e.which == 10 || e.which == 13) {

			// 	            	$('#prompt-input').text = ''

			// 	                socket.emit('response', { 
			// 	                	response: $(this)[0].value,
			// 	                	room: id, 
			// 	                	creator: player, 
			// 	                	type: 'Text'
			// 	                });

			// 	            }

			// 	        });

			// 	        // Icon send
			// 		    $('.icon:not(.item)').on('click', function(){

			// 		      	console.log($(this).attr('id'));
			// 		      	$('.selected').toggleClass('selected');
			// 		      	$(this).toggleClass('selected');

			// 		    });

			// 		    $('#icon-send').on('click', function(){
			// 	      		var icon = $('.icon.selected:not(.item)').attr('id');
			// 	      		if (!icon)
			// 	      			return;
			// 	      		else {
			// 	      			console.log('emitting')
			// 	      			socket.emit('response', {
			// 			      		response: icon, 
			// 			      		room: id, 
			// 		                creator: player, 
			// 		                type:'Image'
			// 			      	});
			// 	      		}
				      		
			// 	      	});
					    

			// 	        break;


			//     }

		    // };
		}
		// loadLive()

		if (sessionStorage.getItem('creator')){
			$('.name-input').fadeOut();
			$('#prompt-group').find('h3 span').text(sessionStorage.getItem('creator'));
			$('#prompt-group').fadeIn(function(){
					
				$('#prompt-choice').on('click', function(){
					findPlan(sessionStorage.getItem('creator'));
				});
			});

		} else {
			var creator = '';
		}

		$('.icon-feed').width(($('.icon:not(.item)').length/3) * 110 + 'px');

		$('#player_name').keydown(function(e) {
			if(e.keyCode == 13 || e.keyCode == 10)
				$('#name-input').click();
		});


		var map, infoWindow;
	    function initMap() {
	        map = new google.maps.Map(document.getElementById('map'), {
	          center: {lat: -34.397, lng: 150.644},
	          zoom: 6
	        });
	        infoWindow = new google.maps.InfoWindow;

	        var geocoder = new google.maps.Geocoder();

	        
	        // Try HTML5 geolocation.
	        if (navigator.geolocation) {
	          navigator.geolocation.getCurrentPosition(function(position) {
	            var pos = {
	              lat: position.coords.latitude,
	              lng: position.coords.longitude
	            };

	            geocodeAddress(geocoder, map, pos);


	            
	          }, function() {
	            handleLocationError(true, infoWindow, map.getCenter());
	          });
	        } else {
	          // Browser doesn't support Geolocation
	          handleLocationError(false, infoWindow, map.getCenter());
	        }
	    }

	    function geocodeAddress(geocoder, resultsMap, pos) {
	        geocoder.geocode({'location': pos}, function(results, status) {
	          if (status === 'OK') {
	            resultsMap.setCenter(results[0].geometry.location);
	            var marker = new google.maps.Marker({
	              map: resultsMap,
	              position: results[0].geometry.location
	            });
	            infoWindow.setContent(results[0].geometry.location.toString());
	            infoWindow.setPosition(pos);
	            map.setCenter(pos);
	          } else {
	            alert('Geocode was not successful for the following reason: ' + status);
	          }
	        });
	    }

	    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
	        infoWindow.setPosition(pos);
	        infoWindow.setContent(browserHasGeolocation ?
	                              'Error: The Geolocation service failed.' :
	                              'Error: Your browser doesn\'t support geolocation.');
	        infoWindow.open(map);
	    }

	    // initMap();

		$('#prompt-choice').on('click', function(){
			findPlan($('.btn-group ul li a.is-checked').attr('id'));
		});

		// $('#name-input').on('click', function(){
		// 	var player = $('#player_name').val();
		// 	if(!player)
		// 		console.log("uh no")
		// 	else {
		// 		creator = player;

		// 		sessionStorage.setItem('creator', creator)
		// 		$('#prompt-group').find('h3 span').text(player);
		// 		$('.name-input').fadeOut();
		// 		$('#prompt-group').fadeIn(function(){
					
					
		// 		});
		// 	}
		// });

		// $('#back-btn').on('click', function(){
		// 	if(sessionStorage.getItem('plan')) {
		// 		$('#response-input').fadeOut();
		// 		sessionStorage.clearItem('plan');
		// 		$('#prompt-group').find('h3 span').text(sessionStorage.getItem('creator'));
		// 		$('#prompt-group').fadeIn(function(){
					
		// 			$('#prompt-choice').on('click', function(){
		// 				findPlan(player);

		// 			});

		// 		});
		// 	} else if (sessionStorage.getItem('creator')) {
		// 		$('#prompt-group').fadeOut(function(){
		// 			$('.name-input').fadeIn();

		// 		});

		// 	}
		// });

		
		
	{{/ifeq}}

	{{#ifeq section 'group'}}

		$('#btn_login').click(function(evt) {
			var data = {};
			data.email = $('#email_input').val();
			data.password = $('#password_input').val();
			console.log(data);

			if (!data.password || !data.email) {
				$('.error').text('Please fill in all fields').fadeIn(function(){
					setTimeout(function(){
						$('.error').fadeOut();
					});
				});
				  
			} else {
				console.log("checking login info");

				$.get("/api/login/", data, function(data){
					if (data.error_code)
						$('.error').text(data.msg).fadeIn(function(){
							setTimeout(function(){
								$('.error').fadeOut();
							});
						});
					else 
						window.location = data;
				})
				.fail(function() {
				    // alert( "error" );
				});
			}

		});
		$('#btn_signup').click(function(evt) {
			var data = {};
			data.name= $('#name_input').val();
			data.email = $('#email_input').val();
			data.password = $('#password_input').val();
			console.log(data);

			if (!data.password || !data.email || !data.name) {
				$('.error').text('Please fill in all fields').fadeIn(function(){
					setTimeout(function(){
						$('.error').fadeOut();
					});
				});
				  
			} else {
				console.log("checking signup info");

				$.get("/api/signup/", data, function(data){
					if (data.error_code)
						$('.error').text(data.msg).fadeIn(function(){
							setTimeout(function(){
								$('.error').fadeOut();
							});
						});
					else 
						window.location = data;
				})
				.fail(function() {
				    alert( "error" );
				});
			}

		});


	{{/ifeq}}


	{{#ifeq section 'profile'}}

		// Click on old plans to select them
		$('.old-plan').click(function(evt){
			$(this).toggleClass('selected');
		});

	  	// Load current plan based on selection
		$('#load-plan').click(function(evt) {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.plan = $('.old-plan.selected').attr('id');
			console.log(data);

			if (!data.planner) 
				console.log ("are you a ghost?");
			else if (!data.plan)
				console.log("..you gotta select something buddy")
			else {
				console.log("loading that one");
				$.get("/api/continue/", data, function(data){
					console.log(data, " signup data");
					$('#plan-wrapper').html(data.eventData).find('#prompt-input').val(data.data.prompt);
					$('.base').fadeOut(function(){
						$('#plan-wrapper').fadeIn(function(){

							// Click on icons
							$('.icon').click(function(evt){
								console.log("clicked")
								$(this).toggleClass('selected');
							});

							$('#save-plan').on('click', function(){
								savePlan();
							});
							$('#launch-plan').click(function(){
								launchPlan();
							});
						});
					});
				})
				.fail(function() {
				    alert( "error" );
				});
			}

		});
		// Create new plan
		$('#new-plan').click(function(evt) {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.text = $('input#new-plan-prompt').val();
			console.log(data);

			if (!data.planner || !data.text) {
				if (!data.planner)
					console.log("is this a ghost?");
				else if (!data.text)
					console.log("check yourself, you forgot to enter a question!")
				  
			} else {
				console.log("let's create that for you");

				$.get("/api/start/", data, function(data){
					console.log(data, " created yourself a damn plan");

					$('#plan-wrapper').html(data.eventData).find('#prompt-input').val(data.data.prompt);
					$('.base').fadeOut(function(){
						$('#plan-wrapper').fadeIn(function(){

							// Click on icons
							$('.icon').click(function(evt){
								console.log("clicked")
								$(this).toggleClass('selected');
							});

							$('#save-plan').click(function(){
								savePlan();
							});
							$('#launch-plan').click(function(){
								launchPlan();
							});
						});
					});
					

				})
				.fail(function() {
				    alert( "error" );
				});

			}

		});

		// Update plan
		var savePlan = function() {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.plan = $('#plan-wrapper .prompt-wrapper').attr('id');
			data.text = $('#prompt-input').val();
			data.icons = [];

			_.each($('.icon.selected'), function(icon) {
				data.icons.push($(icon).attr('id'));
			});

			console.log(data);

			if (!data.planner)
				console.log("is this a ghost?");
			else if (!data.text)
				console.log("check yourself, you forgot to enter a question!")
			else if (!data.plan)
				console.log("uh oh what happened to your code!")
			else {
				console.log("let's update that for you");

				$.get("/api/update/", data, function(data){
					console.log(data, " saved yourself a damn plan");
					$('.saved').fadeIn();

				})
				.fail(function() {
				    alert( "error" );
				});
			}
		};

		// Load current plan based on selection
		var launchPlan = function() {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.plan = $('#plan-wrapper .prompt-wrapper').attr('id');
			console.log(data);

			if (!data.planner) 
				console.log ("are you a ghost?");
			else if (!data.plan)
				console.log("..you gotta select something buddy")
			else {
				console.log("launching this one");
				$.get("/api/launch/", data, function(data){
					console.log(data, " LAUNCH data");
					window.location = data;
				})
				.fail(function(err) {
				    alert( "error" + err );
				});
			}

		};

		if($.fn.cloudinary_fileupload !== undefined) {
		    $("input.icon-upload[type=file]").cloudinary_fileupload();
		}

	{{/ifeq}}

	{{#ifeq section 'present'}}

		var reloading = false;

		function timeout() {
		    setTimeout(function () {

		    	if (reloading == true)
		    		return;

		    	reloading = true;

		    	var data = {
		    		plan: '{{prompt.promptId}}'
		    	};

		        $.get("/api/reload/", data, function(data){
		        	console.log(data);
		        	if (data) {
		     			$('#response-group').html(data.eventData);
					}

					reloading = false;

				})
				.fail(function(err) {
				    alert( "error" + err );
				    reloading = false;
				});

				// window.location.reload(true);



		        timeout();

		    }, 5000);
		}

		timeout();

		console.log('{{section}}');
		// Open Socket connection
		// socket = io('//', {
		//  	reconnection: true,
		//  	'reconnectionDelay': 500,
		//  	'maxReconnectionAttempts':Infinity
		//  });
	 //    registerEvents();

	 //    socketEvents = function(eventId, eventData) {
		    
		//     switch (eventId) {

		//         case 'connect':

		// 	        console.log('connected');

		// 	        socket.emit('room', '{{prompt.promptId}}');

		// 	        break;

		//         case 'response:update':

		// 	        console.log('response going up', eventData);

		// 	        $('#response-group').append(eventData.html);


		// 	        break;

		// 	    case 'response:response': 

		// 	    	if (eventData.comment)
		// 		    	$('.item').find('.comment').append('<div class="comment">' + eventData.comment + '</div>');

		// 		    if (eventData.like)


		// 	    	break;

		//     }

	 //    };

	{{/ifeq}}

	{{#ifeq section 'archive'}}

	$('#archive-grid').isotope({
		itemSelector: '.prompt-wrapper', 
		masonry: { 
			columnWidth: $('#archive-grid').width() / 12,
			gutter: $('#archive-grid').width() / 12
		}
	});
	$('#archived-responses').isotope({
		itemSelector: '.item', 
		masonry: { 
			columnWidth: $('#archived-responses').width() / 12, 
			gutter: $('#archived-responses').width() / 12 
		}
	});

	$('.item').unbind('click').on('click', function(e) {
		if ($(this).hasClass('open'))
			return;

		e.bubbles = false;
	    e.stopImmediatePropagation();
	    e.preventDefault();
	    e.stopPropagation();

		var selected = $(this).find('.response').attr('id');

		var data = {
			response: selected
		};

	    $.get("/api/comments/", data, function(data){
	    	console.log(data);
	    	if (data) {
				$('#archived-responses .item').hide();
				$('#' + selected).closest('.item').addClass('open');
				$('#archived-responses .item.open .response-comments').html(data.html);
				$('#archived-responses .item.open').fadeIn(function(){
					$('.instructions').hide(function() {
						$('#response-back').show().unbind('click').on('click', function(){
							$('.item.open').hide().removeClass('open');
							$('#archived-responses .item').fadeIn();
							$('#response-back').hide(function(){
								$('.instructions').show();
							});
						});
						$('#' + selected).siblings('.like-bubble')
						.unbind('click')
						.on('click', function(e){

							e.bubbles = false;
						    e.stopImmediatePropagation();
						    e.preventDefault();
						    e.stopPropagation();

							if ($(this).hasClass('liked'))
								var like = -1;
							else 
								var like = 1;

							var data = {
								response: selected,
					    		like: like
					    	};

					        $.get("/api/commenting/", data, function(data){
					        	console.log(data);
					        	if (data) {
					        		$('#' + selected).siblings('.like-bubble').toggleClass('liked').text(data.data.likes);
								}

							})
							.fail(function(err) {
							    alert( "error" + err );
							});
						});

						$('#comment-send').unbind('click').on('click', function(){
							var data = {
								response: selected,
					    		comment: $('#response-comment-input').val(), 
					    		creator: $('#response-name-input').val()
					    	};

					    	if (!data.comment) {
					    		$('.error.comment').text('Please add a comment').fadeIn();
					    		return;
					    	} else if (!data.creator) {
					    		$('.error.comment').text('Please add a name').fadeIn();
					    		return;
					    	}

					        $.get("/api/commenting/", data, function(data){
					        	console.log(data);
					        	if (data) {
					        		var data = data.data;
					        		var commentWrap = document.createElement('div');
					        		var comment = document.createElement('h3');
					        		var creator = document.createElement('p');
					        		$(comment).text(data.comment.comment);
					        		$(creator).text(data.comment.creator + ': ');
					        		$(commentWrap).append(creator);
					        		$(commentWrap).append(comment);
					        		$(commentWrap).addClass('comment');
					     			$('.comment-feed').append(commentWrap);
								}

							})
							.fail(function(err) {
							    alert( "error" + err );
							});
						});
					});
				});
			}
		})
		.fail(function(err) {
		    alert( "error" + err );
		});

		
	});

	// $('#prompt-choice').on('click', function(){

	// 	var data = {};

	// 	if (!plan) {
	// 		data.plan = $('#prompt-select option:selected').attr('id');
	// 	} else {
	// 		data.plan = plan;
	// 	}

	// 	if (!sessionStorage.getItem('plan'))
	// 		sessionStorage.setItem('plan', data.plan )

	// 	if (!data.plan)
	// 		console.log("uh oh did you select anything?!")
	// 	else {
	// 		console.log("let's get that sucker for you");

	// 		$.get("/api/archive/", data, function(data){
	// 			console.log(data, " loaded yourself a plan");
	// 			$('#response-input').html(data.eventData).fadeIn(function(){
	// 				$('.prompt-input').addClass('chosen')
	// 				loadLive(data.data.promptId);
	// 			});
	// 		})
	// 		.fail(function() {
	// 		    alert( "error" );
	// 		});
	// 	}

	// });


	{{/ifeq}}

		



});
	
</script>