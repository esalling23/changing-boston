{{!< default}}
{{!-- 
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script include for global logic
 * ==========
 */
--}}

<script type="text/javascript">

	var currentprompt;
	var socket;
	var socketEvents;

	var promptId = "{{promptId}}";

	$(document).ready(function() {

		// All possible socket event IDs
	var eventIds = [
	
		'connect',
		'disconnect',
		'plan:new',

		'response',
		'response:update'

	];


		var registerEvents = function() {
			$.each(eventIds, function(index, id) {
	      
	      socket.on(id, function(eventData) {
	            
	            socketEvents(id, eventData);

	            if(typeof(gameEvents) == "function")
	                gameEvents(id, eventData);

	        });

	    });
		};

		/* 
		 Associate provided data object with current game ID
		*/
		var emitData = function(data) {

			if(!data.code && data.new == true){

			}

			if(gameCode === undefined && typeof(data.code) !== 'undefined')
				gameCode = data.code;

			return { gameId: gameCode, msgData: data };
		
		};

		/* 
		 Obtains the embedded data ('data-key="something"') object from the provided submit button
		*/
		var getFormData = function(submitElement) {

			var pkg;

			if(submitElement[0].dataset === undefined)
				return undefined;
			
			try {
				pkg = JSON.parse(submitElement[0].dataset.package);
			}
			catch(e) {
				pkg = submitElement[0].dataset.package;
			}

			if($.isPlainObject(pkg)) {
				$.each(Object.keys(pkg), function( key, value ) {

					if(pkg[value] !== undefined)
					  pkg[value] = $(pkg[value].toString()).val();

				});
			}
			else if(!submitElement.is('button'))
				pkg = $(pkg).val();

			return pkg;

		};

		/**
		 * Listen for forms that dispatch socket events.
		 *
		 * ### Examples:
		 *
		 * @class global
		 */
		$(document).on('click', '.form .submit', function(evt) {
		    
		    var event = $(this).data().event;
		    var pkg = getFormData($(this));

		    // Emit event to socket
		    socket.emit(event, emitData(pkg));

		});

		

		// Menu toggling
	   $("#menu-close").click(function(e) {
		   e.preventDefault();
		   $("#sidebar-wrapper").toggleClass("active");
	   });
	   $("#menu-toggle").click(function(e) {
		   e.preventDefault();
		   $("#sidebar-wrapper").toggleClass("active");
	   });



    {{#ifeq section "index"}}



	    // set interval for 10 seconds
	    var promptinterval = setInterval(promptChange, 10000);

		function promptChange() {

			var prompts = $('.prompt-wrapper');
			_.each(prompts, function(prompt){
				$(prompt).hide;

			});
		}
		function abortTimer() { // to be called when you want to stop the timer
		    clearInterval(tid);
		}
	
	{{/ifeq}}



	{{#ifeq section "create"}}

		var findPlan = function(player, plan){

			$('.prompt-group').fadeOut();

			var data = {};

			if (!plan) {
				data.plan = $('#prompt-group select option:selected').attr('id');
			} else {
				data.plan = plan;
			}

			if (!sessionStorage.getItem('plan'))
				sessionStorage.setItem('plan', data.plan )

			console.log(data);

			if (!data.plan)
				console.log("uh oh did you select anything?!")
			else {
				console.log("let's get that sucker for you");

				if ($('#prompt-group select').find('#' + data.plan).hasClass('live')) {
					$.get("/api/find/", data, function(data){
						console.log(data, " loaded yourself a damn plan");
						$('#response-input').html(data.eventData).fadeIn(function(){
							loadLive(data.data.promptId, player);
						});
					})
					.fail(function() {
					    alert( "error" );
					});

				} else {
					window.location = 'archive/' + data.plan;
				}

				
			}
		};

		var loadLive = function(id, player) {

			console.log(id)
			// Open Socket connection
			socket = io('//{{host}}', {
			 	path: '/creating-boston', 
			 	reconnection: true,
			 	'reconnectionDelay': 500,
			 	'maxReconnectionAttempts':Infinity
			});

		    registerEvents();

		    socketEvents = function(eventId, eventData) {
			    
			    switch (eventId) {

			        case 'connect':

				        console.log('connected');

				        socket.emit('room', id);

				        // Take Text Area Input
						$('#prompt-input').keypress(function(e) {
				            // Enter pressed?
				            if(e.which == 10 || e.which == 13) {

				            	$('#prompt-input').text = ''

				                socket.emit('response', { 
				                	response: $(this)[0].value,
				                	room: id, 
				                	creator: player, 
				                	type: 'Text'
				                });

				            }

				        });

				        // Icon send
					    $('.icon:not(.item)').on('click', function(){

					      	console.log($(this).attr('id'));
					      	$('.selected').toggleClass('selected');
					      	$(this).toggleClass('selected');

					    });

					    $('#icon-send').on('click', function(){
				      		var icon = $('.icon.selected:not(.item)').attr('id');
				      		if (!icon)
				      			return;
				      		else {
				      			console.log('emitting')
				      			socket.emit('response', {
						      		response: icon, 
						      		room: id, 
					                creator: player, 
					                type:'Image'
						      	});
				      		}
				      		
				      	});
					    

				        break;
			    }

		    };
		}

		if (sessionStorage.getItem('creator')){
			$('.name-input').fadeOut();
			$('#prompt-group').find('h3 span').text(sessionStorage.getItem('creator'));
			$('#prompt-group').fadeIn(function(){
					
				$('#prompt-choice').on('click', function(){
					findPlan(sessionStorage.getItem('creator'));
				});
			});

		} else {
			var creator = '';
		}

		$('.icon-feed').width($('.icon:not(.item)').length * 110 + 'px');

		$('#player_name').keydown(function(e) {
			if(e.keyCode == 13 || e.keyCode == 10)
				$('#name-input').click();
		});

		$('#name-input').on('click', function(){
			var player = $('#player_name').val();
			if(!player)
				console.log("uh no")
			else {
				creator = player;

				sessionStorage.setItem('creator', creator)
				$('#prompt-group').find('h3 span').text(player);
				$('.name-input').fadeOut();
				$('#prompt-group').fadeIn(function(){
					
					$('#prompt-choice').on('click', function(){
						findPlan(player);

					});
				});
			}
		});

		// $('#back-btn').on('click', function(){
		// 	if(sessionStorage.getItem('plan')) {
		// 		$('#response-input').fadeOut();
		// 		sessionStorage.clearItem('plan');
		// 		$('#prompt-group').find('h3 span').text(sessionStorage.getItem('creator'));
		// 		$('#prompt-group').fadeIn(function(){
					
		// 			$('#prompt-choice').on('click', function(){
		// 				findPlan(player);

		// 			});

		// 		});
		// 	} else if (sessionStorage.getItem('creator')) {
		// 		$('#prompt-group').fadeOut(function(){
		// 			$('.name-input').fadeIn();

		// 		});

		// 	}
		// });

		
		
	{{/ifeq}}

	{{#ifeq section 'group'}}

		$('#btn_login').click(function(evt) {
			var data = {};
			data.email = $('#email_input').val();
			data.password = $('#password_input').val();
			console.log(data);

			if (!data.password || !data.email) {
				console.log ("empty fields");
				  
			} else {
				console.log("checking login info");

				$.get("/api/login/", data, function(data){
					console.log(data, " login data");
					window.location = data;
				})
				.fail(function() {
				    // alert( "error" );
				});
			}

		});
		$('#btn_signup').click(function(evt) {
			var data = {};
			data.name= $('#name_input').val();
			data.email = $('#email_input').val();
			data.password = $('#password_input').val();
			console.log(data);

			if (!data.password || !data.email || !data.name) {
				console.log ("empty fields");
				  
			} else {
				console.log("checking signup info");

				$.get("/api/signup/", data, function(data){
					console.log(data, " signup data");
					window.location = data;
				})
				.fail(function() {
				    alert( "error" );
				});
			}

		});


	{{/ifeq}}


	{{#ifeq section 'profile'}}

		// Click on old plans to select them
		$('.old-plan').click(function(evt){
			$(this).toggleClass('selected');
		});

	  	// Load current plan based on selection
		$('#load-plan').click(function(evt) {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.plan = $('.old-plan.selected').attr('id');
			console.log(data);

			if (!data.planner) 
				console.log ("are you a ghost?");
			else if (!data.plan)
				console.log("..you gotta select something buddy")
			else {
				console.log("loading that one");
				$.get("/api/continue/", data, function(data){
					console.log(data, " signup data");
					$('#plan-wrapper').html(data.eventData).find('#prompt-input').val(data.data.prompt);
					$('.base').fadeOut(function(){
						$('#plan-wrapper').fadeIn(function(){

							// Click on icons
							$('.icon').click(function(evt){
								console.log("clicked")
								$(this).toggleClass('selected');
							});

							$('#save-plan').on('click', function(){
								savePlan();
							});
							$('#launch-plan').click(function(){
								launchPlan();
							});
						});
					});
				})
				.fail(function() {
				    alert( "error" );
				});
			}

		});
		// Create new plan
		$('#new-plan').click(function(evt) {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.text = $('input#new-plan-prompt').val();
			console.log(data);

			if (!data.planner || !data.text) {
				if (!data.planner)
					console.log("is this a ghost?");
				else if (!data.text)
					console.log("check yourself, you forgot to enter a question!")
				  
			} else {
				console.log("let's create that for you");

				$.get("/api/start/", data, function(data){
					console.log(data, " created yourself a damn plan");

					$('#plan-wrapper').html(data.eventData).find('#prompt-input').val(data.data.prompt);
					$('.base').fadeOut(function(){
						$('#plan-wrapper').fadeIn(function(){

							// Click on icons
							$('.icon').click(function(evt){
								console.log("clicked")
								$(this).toggleClass('selected');
							});

							$('#save-plan').click(function(){
								savePlan();
							});
							$('#launch-plan').click(function(){
								launchPlan();
							});
						});
					});
					

				})
				.fail(function() {
				    alert( "error" );
				});

			}

		});

		// Update plan
		var savePlan = function() {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.plan = $('#plan-wrapper .prompt-wrapper').attr('id');
			data.text = $('#prompt-input').val();
			data.icons = [];

			_.each($('.icon.selected'), function(icon) {
				data.icons.push($(icon).attr('id'));
			});

			console.log(data);

			if (!data.planner)
				console.log("is this a ghost?");
			else if (!data.text)
				console.log("check yourself, you forgot to enter a question!")
			else if (!data.plan)
				console.log("uh oh what happened to your code!")
			else {
				console.log("let's update that for you");

				$.get("/api/update/", data, function(data){
					console.log(data, " saved yourself a damn plan");
					$('.saved').fadeIn();

				})
				.fail(function() {
				    alert( "error" );
				});
			}
		};

		// Load current plan based on selection
		var launchPlan = function() {
			var data = {};
			data.planner = $('.profile').attr('id');
			data.plan = $('#plan-wrapper .prompt-wrapper').attr('id');
			console.log(data);

			if (!data.planner) 
				console.log ("are you a ghost?");
			else if (!data.plan)
				console.log("..you gotta select something buddy")
			else {
				console.log("launching this one");
				$.get("/api/launch/", data, function(data){
					console.log(data, " LAUNCH data");
					window.location = data;
				})
				.fail(function(err) {
				    alert( "error" + err );
				});
			}

		};

		if($.fn.cloudinary_fileupload !== undefined) {
		    $("input.icon-upload[type=file]").cloudinary_fileupload();
		}

	{{/ifeq}}

	{{#ifeq section 'present'}}

		console.log('{{section}}');
		// Open Socket connection
		socket = io('//{{host}}', {
		 	path: '/creating-boston', 
		 	reconnection: true,
		 	'reconnectionDelay': 500,
		 	'maxReconnectionAttempts':Infinity
		 });
	    registerEvents();

	    socketEvents = function(eventId, eventData) {
		    
		    switch (eventId) {

		        case 'connect':

			        console.log('connected');

			        socket.emit('room', '{{prompt.promptId}}');

			        break;

		        case 'response:update':

			        console.log('response going up', eventData);

			        $('#response-group').append(eventData.html);

			      	// if (eventData.type == 'Text'){
			      	// 	// console.log(item, "is the text");

				      //   var html = '<div class="item text col-sm-3"><p>' + eventData.response + '</p></div>';

				      // 	$('#response-group').append(html);

			      	// } else if (eventData.type == 'Image') {

			      	// 	var html = '<div class="item icon col-sm-3"><img src="' + eventData.item + '"/></div>';

				      	

			      	// }


			        break;

		    }

	    };

	{{/ifeq}}

		



});
	
</script>